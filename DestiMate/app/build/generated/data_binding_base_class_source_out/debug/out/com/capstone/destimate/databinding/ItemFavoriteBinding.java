// Generated by view binder compiler. Do not edit!
package com.capstone.destimate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.capstone.destimate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFavoriteBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cvItemFavorite;

  @NonNull
  public final ImageView iconItemAddress;

  @NonNull
  public final ImageView iconItemRating;

  @NonNull
  public final ImageView imgItemFavPhoto;

  @NonNull
  public final TextView tvItemAlamat;

  @NonNull
  public final TextView tvItemDescription;

  @NonNull
  public final TextView tvItemFavName;

  @NonNull
  public final TextView tvItemRating;

  private ItemFavoriteBinding(@NonNull CardView rootView, @NonNull CardView cvItemFavorite,
      @NonNull ImageView iconItemAddress, @NonNull ImageView iconItemRating,
      @NonNull ImageView imgItemFavPhoto, @NonNull TextView tvItemAlamat,
      @NonNull TextView tvItemDescription, @NonNull TextView tvItemFavName,
      @NonNull TextView tvItemRating) {
    this.rootView = rootView;
    this.cvItemFavorite = cvItemFavorite;
    this.iconItemAddress = iconItemAddress;
    this.iconItemRating = iconItemRating;
    this.imgItemFavPhoto = imgItemFavPhoto;
    this.tvItemAlamat = tvItemAlamat;
    this.tvItemDescription = tvItemDescription;
    this.tvItemFavName = tvItemFavName;
    this.tvItemRating = tvItemRating;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFavoriteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_favorite, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFavoriteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cvItemFavorite = (CardView) rootView;

      id = R.id.icon_item_address;
      ImageView iconItemAddress = ViewBindings.findChildViewById(rootView, id);
      if (iconItemAddress == null) {
        break missingId;
      }

      id = R.id.icon_item_rating;
      ImageView iconItemRating = ViewBindings.findChildViewById(rootView, id);
      if (iconItemRating == null) {
        break missingId;
      }

      id = R.id.img_item_fav_photo;
      ImageView imgItemFavPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imgItemFavPhoto == null) {
        break missingId;
      }

      id = R.id.tv_item_alamat;
      TextView tvItemAlamat = ViewBindings.findChildViewById(rootView, id);
      if (tvItemAlamat == null) {
        break missingId;
      }

      id = R.id.tv_item_description;
      TextView tvItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvItemDescription == null) {
        break missingId;
      }

      id = R.id.tv_item_fav_name;
      TextView tvItemFavName = ViewBindings.findChildViewById(rootView, id);
      if (tvItemFavName == null) {
        break missingId;
      }

      id = R.id.tv_item_rating;
      TextView tvItemRating = ViewBindings.findChildViewById(rootView, id);
      if (tvItemRating == null) {
        break missingId;
      }

      return new ItemFavoriteBinding((CardView) rootView, cvItemFavorite, iconItemAddress,
          iconItemRating, imgItemFavPhoto, tvItemAlamat, tvItemDescription, tvItemFavName,
          tvItemRating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
